version: '3.7'

volumes:
    prometheus_data: {}
    grafana_data: {}

networks:
  front-tier:
  rabbitmq-prometheus:

services:

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
      - node-exporter:node-exporter  

    depends_on:
      - cadvisor
    networks:
      - rabbitmq-prometheus
    restart: always

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - rabbitmq-prometheus
    restart: always
    # deploy:
    #  mode: global

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - rabbitmq-prometheus
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  cadvisor:
    image: gcr.io/google-containers/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
        #- /cgroup:/cgroup:ro  
    ports:
      - 8080:8080
    networks:
      - rabbitmq-prometheus
    restart: always
    depends_on:
    - redis

  redis:
    image: redis:latest
    container_name: redis
    ports:
    - 6379:6379

  grafana:
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - rabbitmq-prometheus
      - front-tier
    restart: always

  mongo_exporter:
    restart: 'always'
    command:
      - '--mongodb.uri=mongodb://root:secret@52.183.69.248:27017/admin'
      - '--collect.database'
      - '--collect.collection'
      - '--collect.topmetrics'
      - '--collect.indexusage'
      - '--collect.connpoolstats'
    ports:
      - '9216:9216'
    image: ravijaya/mongodb_exporter:latest
    container_name: mongo-exporter
#    environment:
#      - 'MONGODB_URI=mongodb://mongodb_exporter:s3cr3tpassw0rd@localhost:27017'
#    # - "MONGODB_URI='mongodb://root:secret@localhost:27017/admin'"
#    # - "HTTP_AUTH='root:secret'"
#    #- 'MONGO_SERVICE=mongodb-service'
#    # - 'MONGO_PORT=27017'
    networks:
      - rabbitmq-prometheus

#  pushgateway:
#    image: prom/pushgateway
#    restart: always
#    expose:
#      - 9091
#    ports:
#      - "9091:9091"
#    networks:
#      - rabbitmq-prometheus
